type fragment;

input {
	position: float4 {
		semantic SV_POSITION;
	}
}

struct RenderInfo {
	float4 color;
	float2 resolution;
	float2 offset;
	float2 origin;
	float2 radius;
}

uniform {
	u_renderInfo: RenderInfo
}

target SV_TARGET;

def main(): float4 {
	float2 pos = (__FRAG_COORD__.xy - u_renderInfo.offset) / u_renderInfo.resolution;
	pos -= 0.5f;
	pos *= 2.0f;

	float a = pos.x - u_renderInfo.origin.x;
	float b = pos.y - u_renderInfo.origin.y;

	float result = a * a / (u_renderInfo.radius.x * u_renderInfo.radius.x) +
				b * b / (u_renderInfo.radius.y * u_renderInfo.radius.y);

	if (result <= 1.0f) {
		return u_renderInfo.color;
	}

	return float4(0.0f, 0.0f, 0.0f, 0.0f);
}
